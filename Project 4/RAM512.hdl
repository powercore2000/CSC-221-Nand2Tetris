// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory unit with 512 registers, each 16 bits wide.
 * The output holds the value stored at the memory location specified by the address.
 * If load is set to 1, the input value is loaded into the memory location
 * specified by the address, and the loaded value will be emitted to the
 * output from the next time step onward.
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Implementation of a 512-register memory unit
    DMux8Way(in=load, sel=address[0..2], a=loadin1, b=loadin2, c=loadin3, d=loadin4, e=loadin5, f=loadin6, g=loadin7, h=loadin8);
    RAM64(in=in, load=loadin1, address=address[3..8], out=rm1);
    RAM64(in=in, load=loadin2, address=address[3..8], out=rm2);
    RAM64(in=in, load=loadin3, address=address[3..8], out=rm3);
    RAM64(in=in, load=loadin4, address=address[3..8], out=rm4);
    RAM64(in=in, load=loadin5, address=address[3..8], out=rm5);
    RAM64(in=in, load=loadin6, address=address[3..8], out=rm6);
    RAM64(in=in, load=loadin7, address=address[3..8], out=rm7);
    RAM64(in=in, load=loadin8, address=address[3..8], out=rm8);
    Mux8Way16(a=rm1, b=rm2, c=rm3, d=rm4, e=rm5, f=rm6, g=rm7, h=rm8, sel=address[0..2], out=out);
}
